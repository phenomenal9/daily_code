class Solution {
    public int subarray(int[] nums, int k)
    {
        if(k <= 0) return 0;
        int i = 0;
        int j = 0;
        int result = 0;
        
        Map<Integer, Integer> mp = new HashMap<>();
        while(j < nums.length)
        {
            mp.put(nums[j], mp.getOrDefault(nums[j], 0) + 1);
            
            while(mp.size() > k)
            {
                int temp = nums[i];
                
                mp.put(temp, mp.getOrDefault(temp, 0) - 1);
                if(mp.get(temp) == 0)
                    mp.remove(temp);
                i++;
            }
            
            result += (j - i + 1);
            
            j++;
        }
        return result;
    }
    public int subarraysWithKDistinct(int[] nums, int k) {
        return subarray(nums, k) - subarray(nums, k-1);
    }
}

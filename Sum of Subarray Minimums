class Solution {
    public int sumSubarrayMins(int[] arr) {
        Stack<Integer> stk = new Stack<>();
        stk.push(-1);
        long res = 0;
        for(int i=0; i<arr.length; i++)
        {
            while(stk.size() > 1 && arr[stk.peek()] > arr[i])
            {
                int currentIdx = stk.pop();
                
                res += ((long) arr[currentIdx] * (currentIdx - stk.peek()) * (i - currentIdx)) % 1000000007;
                res = res % 1000000007;
            }
            stk.push(i);
        }
        
        while(stk.size() > 1)
        {
            int currentIdx = stk.pop();

            res += ((long) arr[currentIdx] * (currentIdx - stk.peek()) * (arr.length - currentIdx)) % 1000000007;
            res = res % 1000000007;
        }
        return (int)res;
    }
}

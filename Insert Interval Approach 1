class Solution {
    public int[][] insert(int[][] intervals, int[] newInterval) {
        List<int[]> al = new ArrayList<>();
        int done = 1;

        for(int i=0; i<intervals.length; i++)
        {
            if(al.size() == 0)
            {
                if(intervals[i][0] >= newInterval[0] && done == 1)
                {
                    al.add(newInterval);
                    done = 0;
                }
                al.add(intervals[i]);
            }
                
            else
            {
                if(intervals[i][0] >= newInterval[0] && done == 1)
                {
                    al.add(newInterval);
                    done = 0;
                }
                al.add(intervals[i]);
            }
        }
        
        if(intervals.length==0 || done==1) al.add(newInterval);
        
        List<int[]> merged = new ArrayList<>();
        
        for(int i=0; i<al.size(); i++)
        {
            if(merged.isEmpty() || merged.get(merged.size()-1)[1] < al.get(i)[0])
                merged.add(al.get(i));
            else
                merged.get(merged.size() - 1)[1] = Math.max(merged.get(merged.size() - 1)[1], al.get(i)[1]);
        }
        
        int[][] ans = new int[merged.size()][2];
        for(int i=0; i<merged.size(); i++)
        {
            ans[i] = merged.get(i);
        }
        return ans;
    }
}

//User function Template for Java

class Solution
{
    public void subsetSum(int[] arr, int n, int sum, ArrayList<Integer> possibleSum) {
        boolean[][] t = new boolean[n+1][sum+1];
        
        for(int j=0; j<sum+1; j++) {
            t[0][j] = false;
        }
        
        for(int i=0; i<n+1; i++) 
            t[i][0] = true;
            
        for(int i=1; i<n+1; i++) {
            for(int j=1; j<sum+1; j++) {
                if(arr[i-1] <= j) {
                    t[i][j] = t[i-1][j] || t[i-1][j-arr[i-1]];
                }
                
                else
                    t[i][j] = t[i-1][j];
            }
        }
        
        for(int j=0; j<=(int)((sum+1)/2); j++) {
            if(t[n][j]) possibleSum.add(j); 
        }
    
    }
	public int minDifference(int arr[], int n) 
	{ 
	    // Your code goes here
	    int sum = 0;
	    
	    for(int i=0; i<n; i++) {
	        sum += arr[i];
	    }
	    
	    ArrayList<Integer> possibleSum = new ArrayList<>();
	    subsetSum(arr, n, sum, possibleSum);
	    
	    int minVal = Integer.MAX_VALUE;
	    for(int i=0; i<possibleSum.size(); i++) {
	        minVal = Math.min(Math.abs(sum - 2 * possibleSum.get(i)), minVal);
	    }
	    
	    return minVal;
	} 
}

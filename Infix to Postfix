class Solution {
    // Function to convert an infix expression to a postfix expression.
    public static int findPrec(Character c)
    {
        if(c == '+' || c == '-')
            return 1;
        else if(c == '*' || c == '/')
            return 2;
        else if(c == '^')
            return 3;
        
        return -1;
    }
    
    public static String infixToPostfix(String exp) {
        // Your code here
        StringBuilder stb = new StringBuilder();
        Stack<Character> stk = new Stack<>();
        for(int i=0; i<exp.length(); i++)
        {
            if(Character.isLetterOrDigit(exp.charAt(i)))
            {
                stb.append(exp.charAt(i));
            }
            else if(exp.charAt(i) == '(')
                stk.push(exp.charAt(i));
            
            else if(exp.charAt(i) == ')')
            {
                while(!stk.isEmpty() && stk.peek() != '(')
                {
                    stb.append(stk.peek());
                    stk.pop();
                }
                //System.out.print(stk.size());
                stk.pop();
            }

            else
            {
                int prec = findPrec(exp.charAt(i));
                
                while(!stk.isEmpty() && findPrec(stk.peek()) >= prec)
                {
                    stb.append(stk.pop());
                }
                stk.push(exp.charAt(i));
            }
        }
        while(!stk.isEmpty())
            stb.append(stk.pop());
        return stb.toString();
    }
}

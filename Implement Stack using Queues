class MyStack {
    Queue<Integer> q1;
    Queue<Integer> q2;

    public MyStack() {
        this.q1=new LinkedList<>();
        this.q2=new LinkedList<>();
    }
    
    public void push(int x) {
        q1.offer(x);
    }
    
    public int pop() {
        if(q1.size() == 0) return -1;
        
        while(q1.size() > 1)
        {
            q2.offer(q1.peek());
            q1.poll();
        }
        int reqd = q1.peek();
        q1.poll();
        
        while(!q2.isEmpty())
        {
            q1.offer(q2.peek());
            q2.poll();
        }
        return reqd;
    }
    
    public int top() {
        if(q1.size() == 0) return -1;
        
        while(q1.size() > 1)
        {
            q2.offer(q1.peek());
            q1.poll();
        }
        int top = q1.peek();
        q2.offer(top);
        q1.poll();
        
        while(!q2.isEmpty())
        {
            q1.offer(q2.peek());
            q2.poll();
        }
        return top;
    }
    
    public boolean empty() {
        return q1.isEmpty();
    }
}

/**
 * Your MyStack object will be instantiated and called as such:
 * MyStack obj = new MyStack();
 * obj.push(x);
 * int param_2 = obj.pop();
 * int param_3 = obj.top();
 * boolean param_4 = obj.empty();
 */

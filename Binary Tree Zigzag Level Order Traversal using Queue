/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        Queue<TreeNode> q = new java.util.LinkedList<>();
        List<List<Integer>> ls = new ArrayList<>();
        
        if(root == null) return ls;
        
        q.add(root);
        int level = 0;
        boolean flag = true;
        while(!q.isEmpty())
        {
            int numnodes = q.size();
            List<Integer> temp = new ArrayList<>();
            
            for(int i=0; i<numnodes; i++)
            {
                if(q.peek().left != null)
                    q.add(q.peek().left);
                if(q.peek().right != null)
                    q.add(q.peek().right);

                if(flag == true) temp.add(q.remove().val);
                else temp.add(0, q.remove().val);
            }
            flag = !flag;
            ls.add(temp);
        }
        return ls;
    }
}

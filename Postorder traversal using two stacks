class Tree
{
    //Function to return a list containing the postorder traversal of the tree.

    ArrayList<Integer> postOrder(Node root)
    {
       // Your code goes here
       Stack<Node> stk = new Stack<>();
       Stack<Node> s = new Stack<>();
       ArrayList<Integer> ls = new ArrayList<>(); 
       stk.push(root);
       
       while(!stk.isEmpty())
       {
            Node temp = stk.pop();
           
           
            if(temp.left != null)
                stk.push(temp.left);
            if(temp.right != null)
                stk.push(temp.right);
            
            s.push(temp);
       }
       
       while(!s.isEmpty())
       {
           ls.add(s.pop().data);
       }
       
       return ls;
    }
}

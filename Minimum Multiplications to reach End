// User function Template for Java
class Pair{
    int node;
    int steps;
    
    Pair(int node, int steps){
        this.node = node;
        this.steps = steps;
    }
}
class Solution {
    int minimumMultiplications(int[] arr, int start, int end) {

        // Your code here
        Queue<Pair> q = new java.util.LinkedList<>();
        
        int[] distance = new int[(int)100000];
        
        Arrays.fill(distance, (int)1e9);
        
        distance[start] = 0;
        
        q.offer(new Pair(start, 0));
        
        while(!q.isEmpty())
        {
            int node = q.peek().node;
            int steps = q.peek().steps;
            q.poll();
            
            for(int i=0; i<arr.length; i++)
            {
                int num = (node * arr[i]) % 100000;
                
                if(steps + 1 < distance[num])
                {
                    distance[num] = steps + 1;
                    if(num == end) return steps + 1;
                    q.offer(new Pair(num, steps + 1));
                }
            }
        }
        
        return -1;
    }
}

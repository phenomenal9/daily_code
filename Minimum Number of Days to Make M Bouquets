class Solution {
    public int minDays(int[] bloomDay, int m, int k) {
        if((m * k) > bloomDay.length) return -1;
        
        int ans = -1;
        int high = 0, low = Integer.MAX_VALUE;
        for(int i=0; i<bloomDay.length; i++)
        {
            low = Math.min(low, bloomDay[i]);
            high = Math.max(high, bloomDay[i]);
        }
        
        while(low <= high)
        {
            int mid = low + (high - low)/2;
            if(isPossible(bloomDay, m, k, mid))
            {
                ans = mid;
                high = mid - 1;
            }
            else
            {
                low = mid + 1;
            }
        }
        return ans;
    }
    
    public boolean isPossible(int[] bloomday, int m, int k, int mid)
    {
        int flowers = 0, bouquets = 0;
        
        for(int i=0; i<bloomday.length; i++)
        {
            if(bloomday[i] > mid)
                flowers = 0;
            else
            {
                flowers++;
                if(flowers == k)
                {
                    bouquets++;
                    flowers = 0;
                }
            }
        }
        
        return bouquets >= m;
    }
}

class Solution {
    public int[] searchRange(int[] nums, int target) {
        int[] arr = {-1, -1};
        if(nums.length == 0) return arr;
        
        arr[0] = searchFirst(nums, target);
        arr[1] = searchEnd(nums, target);
        
        return arr;
    }
    
    public int searchFirst(int[] nums, int target)
    {
        int left = 0;
        int right = nums.length-1;
        int start = -1;
        while(left<=right)
        {
            int mid = left + (right-left)/2;
            
            if(nums[mid] == target)
            {
                start = mid;
                right = mid - 1;
            }
            
            if(nums[mid]>target)
                right = mid - 1;
            else if(nums[mid]<target)
                left = mid + 1;
        }
        return start;
    }
    
    public int searchEnd(int[] nums, int target)
    {
        int left = 0;
        int right = nums.length-1;
        int end = -1;
        while(left<=right)
        {
            int mid = left + (right-left)/2;
            
            if(nums[mid] == target)
            {
                end = mid;
                left = mid + 1;
            }
            
            if(nums[mid]>target)
                right = mid - 1;
            else if(nums[mid]<target)
                left = mid + 1;
        }
        return end;
    }
}

class Solution {
    public List<List<Integer>> subsetsWithDup(int[] nums) {
        Arrays.sort(nums);
        List<List<Integer>> result = new ArrayList<>();
        result.add(new ArrayList<>());
        Map<Integer, Integer> mp = new HashMap<>();
        for(int i = 1; i <= nums.length; i++) {
            int size = result.size();
            if(!mp.containsKey(nums[i-1])) {
                for(int j = 0; j < size; j++) {
                    List<Integer> temp = new ArrayList<>(result.get(j));
                    temp.add(nums[i-1]);
                    result.add(new ArrayList<>(temp));
                }
            }
            else {
                int end = mp.get(nums[i - 1]);
                for(int j = end; j < size; j++) {
                    List<Integer> temp = new ArrayList<>(result.get(j));
                    temp.add(nums[i-1]);
                    result.add(temp);
                }
            }
            
            mp.put(nums[i - 1], size);
        }
        
        return result;
    }
}

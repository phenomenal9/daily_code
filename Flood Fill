class Solution {
    public int[][] floodFill(int[][] image, int sr, int sc, int color) {
        int src = image[sr][sc];
        
        Queue<int[]> q = new java.util.LinkedList<>();
        q.offer(new int[]{sr, sc});
        
        int[] dx = {0, 1, 0, -1};
        int[] dy = {1, 0, -1, 0};
        image[sr][sc] = -1;
        
        while(!q.isEmpty())
        {
            int[] temp = q.poll();
            for(int i=0; i<4; i++)
            {
                int row = temp[0] + dx[i];
                int col = temp[1] + dy[i];
                
                if(row < 0 || col < 0 || row >= image.length || col >= image[0].length || image[row][col] != src)
                    continue;
                image[row][col] = -1;
                q.offer(new int[]{row, col});
            }
        }
        
        
        for(int i=0; i<image.length; i++)
        {
            for(int j=0; j<image[0].length; j++)
            {
                if(image[i][j] == -1)
                    image[i][j] = color;
            }
        }
        return image;
    }
}

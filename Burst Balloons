public class Solution {
    public static int solve(int[] coins, int[][] t, int i, int j) {
        if(i > j) return 0;

        if(t[i][j] != -1) return t[i][j];
        int ans = 0;
        for(int k = i; k <= j; k++) {
            int temp_ans = coins[i - 1] * coins[k] * coins[j + 1] + solve(coins, t, i, k - 1) + solve(coins, t, k + 1, j);
            ans = Math.max(temp_ans, ans);
        }

        return t[i][j] = ans;
    }
    public static int burstBalloons(int []arr){
        // Write your code here.
        int[] coins = new int[arr.length + 2];
        int[][] t = new int[arr.length + 1][arr.length + 1];

        for(int i = 1; i <= arr.length; i++) {
            coins[i] = arr[i - 1];
        }

        coins[0] = 1;
        coins[coins.length - 1] = 1;

        for(int i = 0; i < arr.length + 1; i++) {
            for(int j = 0; j < arr.length + 1; j++) {
                t[i][j] = -1;
            }
        }

        return solve(coins, t, 1, arr.length);
    }
}

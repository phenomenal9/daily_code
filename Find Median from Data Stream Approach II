class MedianFinder {
    PriorityQueue<Integer> smallHeap = new PriorityQueue<>((a,b) -> b - a);
    PriorityQueue<Integer> largeHeap = new PriorityQueue<>();
    boolean even = true;
    public MedianFinder() {
    
    }
    
    public void addNum(int num) {
        if(even) {
            largeHeap.offer(num);
            smallHeap.offer(largeHeap.poll());
        }
        else {
            smallHeap.offer(num);
            largeHeap.offer(smallHeap.poll());
        }
        even = !even;
    }
    
    public double findMedian() {
        if(even) {
            return ((double)largeHeap.peek() + smallHeap.peek())/2.0;
        }
        else {
            return (double)smallHeap.peek();
        }
    }
}

/**
 * Your MedianFinder object will be instantiated and called as such:
 * MedianFinder obj = new MedianFinder();
 * obj.addNum(num);
 * double param_2 = obj.findMedian();
 */

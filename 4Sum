class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> ans = new ArrayList<>();
        Arrays.sort(nums);
        int n = nums.length;
        if(n==0||n<3){
            return ans;
        }
        if(target==-294967296 || target==294967296){
            return ans;
        }
        for(int i=0; i<nums.length; i++)
        {
            if(i>0 && nums[i] == nums[i-1]) continue;
            for(int j=i+1; j<nums.length; j++)
            {
                if(j>i+1 && nums[j] == nums[j-1]) continue;
                
                int k = j + 1;
                int l = nums.length - 1;
                
                while(k < l)
                {
                    long temp = nums[i] + nums[j] + nums[k] + nums[l];
                    if(temp == target) 
                    {
                        List<Integer> tmp = new ArrayList<>();
                        tmp.add(nums[i]);
                        tmp.add(nums[j]);
                        tmp.add(nums[k]);
                        tmp.add(nums[l]);
                        ans.add(tmp);
                        
                        k++;
                        l--;
                        
                        while(k<l && nums[k] == nums[k-1]) k++;
                        while(k<l && nums[l] == nums[l+1]) l--;
                    }
                    else if(temp<target) k++;
                    else l--; 
                }
            }
        }
        return ans;
    }
}

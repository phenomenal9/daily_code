public class Solution {
    static int mod = (int)1e9 + 7;
    public static int distinctSubsequences(String s, String t) {
        // Write your code here.
        int n = s.length();
        int m = t.length();

        int[][] dp = new int[n + 1][m + 1];
        
        for(int i = 0; i < n + 1; i++) dp[i][0] = 1;
        
        for(int j = 1; j < m + 1; j++) dp[0][j] = 0;
        
        for(int i = 1; i < n + 1; i++) {
            for(int j = 1; j < m + 1; j++) {
                if(s.charAt(i - 1) == t.charAt(j - 1)) {
                    dp[i][j] = (dp[i - 1][j - 1] + dp[i - 1][j]) % mod;
                    
                    // First part signifies that we have already taken the same character from 
                    // s and second part signifies that we have not taken the character.
                    
                }
                else {
                    dp[i][j] = dp[i - 1][j];
                }
            }
        }
        
        return dp[n][m];
    }
}

import java.util.Map.Entry;
class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        HashMap<Integer, Integer> mp = new HashMap<>();
        ArrayList<Integer> ls = new ArrayList<>();
        ArrayList<Integer> count = new ArrayList<>();
        for(int i=0; i<nums.length; i++)
        {
            if(mp.containsKey(nums[i]))
            {
                mp.put(nums[i], mp.get(nums[i]) + 1);
            }
            else
            {
                mp.put(nums[i], 1);
            }
        }
        for(Entry<Integer, Integer> entry:mp.entrySet())
        {
            count.add(entry.getValue());
        }
        
        int[] count_arr = count.stream().mapToInt(i->i).toArray();
        Arrays.sort(count_arr);
        
        for(int j=0; j<k; j++)
        {
            for(Entry<Integer, Integer> entry:mp.entrySet())
            {
                if(entry.getValue() == count_arr[count_arr.length-1-j])
                {
                    ls.add(entry.getKey());
                    mp.put(entry.getKey(), 0);
                    break;
                }
            }
        }
        
        
        
        return ls.stream().mapToInt(i->i).toArray();
    }
}

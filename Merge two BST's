
//User function Template for Java


/*
class Node  
{ 
    int data; 
    Node left, right; 
   
    public Node(int d)  
    { 
        data = d; 
        left = right = null; 
    } 
}
    
*/
class Solution
{
    //Function to return a list of integers denoting the node 
    //values of both the BST in a sorted order.
    public void inorder(Node root, List<Integer> ls)
    {
        if(root == null) return;
        
        inorder(root.left, ls);
        ls.add(root.data);
        inorder(root.right, ls);
    }
    public List<Integer> merge(Node root1,Node root2)
    {
        // Write your code here
        List<Integer> res = new ArrayList<>();
        List<Integer> ls1 = new ArrayList<>();
        List<Integer> ls2 = new ArrayList<>();
        
        inorder(root1, ls1);
        inorder(root2, ls2);
        
        int i = 0, j = 0, k = 0;
        
        while(i < ls1.size() && j < ls2.size())
        {
            if(ls1.get(i) <= ls2.get(j))
            {
                res.add(ls1.get(i));
                i++;
            }
            else
            {
                res.add(ls2.get(j));
                j++;
            }
            k++;
        }
        
        while(i < ls1.size())
        {
            res.add(ls1.get(i));
            i++;
            k++;
        }
        
        while(j < ls2.size())
        {
            res.add(ls2.get(j));
            j++;
            k++;
        }
        
        return res;
    }
}


class Solution
{
    //Function to find the maximum profit and the number of jobs done.
    int[] JobScheduling(Job arr[], int n)
    {
        // Your code here
        Arrays.sort(arr, (a,b) -> b.profit - a.profit);
        int maxDeadline = -1;
        
        for(int i=0; i<arr.length; i++)
            maxDeadline = Math.max(maxDeadline, arr[i].deadline);
        
        //Declare an array that holds the day in which a particular job is performed   
        int[] jobscheduler = new int[maxDeadline+1];
        int[] result = new int[2];
        int maxProfit = 0;
        int count = 0;
        for(int i=0; i<arr.length; i++)
        {
            for(int j=arr[i].deadline; j>0; j--)
            {
                if(jobscheduler[j] == 0)
                {
                    jobscheduler[j] = arr[i].id;
                    maxProfit += arr[i].profit;
                    count++;
                    break;
                }
            }
        }
        result[0] = count;
        result[1] = maxProfit;
        
        return result;
    }
}

/*
class Job {
    int id, profit, deadline;
    Job(int x, int y, int z){
        this.id = x;
        this.deadline = y;
        this.profit = z; 
    }
}
*/

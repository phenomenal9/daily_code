
import java.util.ArrayList;

class TrieNode {
	TrieNode[] children = new TrieNode[26];
	boolean flag = false;
	public TrieNode() {

	}

	boolean containsKey(char c) {
		return children[c - 'a'] != null;
	}
	void put(char c, TrieNode node) {
		children[c - 'a'] = node;
	}
	TrieNode get(char c) {
		return children[c - 'a'];
	}
}
public class Solution 
{

	public static int countDistinctSubstrings(String s) 
	{
		//	  Write your code here.
		int cnt = 0;
		TrieNode root = new TrieNode();

		for(int i=0; i<s.length(); i++) {
			TrieNode curr = root;
			for(int j=i; j<s.length(); j++) {
				if(!curr.containsKey(s.charAt(j))) {
					cnt++;
					curr.put(s.charAt(j), new TrieNode());
					
				}
				curr = curr.get(s.charAt(j));
			}
		}
		return 1 + cnt;
	}
}

public class Solution {
    public static double median(int[] arr1, int[] arr2) {
    	// Write your code here.
        int n = arr1.length;
        int m = arr2.length;
        if(n > m) return median(arr2, arr1);

        int k = (m + n + 1) / 2;

        int low = Math.max(0, k - m);
        int high = Math.min(n, k);

        while(low <= high) {
            int cut1 = low + (high - low) / 2;
            int cut2 = k - cut1;

            int l1 = cut1 == 0 ? Integer.MIN_VALUE : arr1[cut1 - 1];
            int l2 = cut2 == 0 ? Integer.MIN_VALUE : arr2[cut2 - 1];
            int r1 = cut1 == n ? Integer.MAX_VALUE : arr1[cut1]; 
            int r2 = cut2 == m ? Integer.MAX_VALUE : arr2[cut2];

            if(l1 <= r2 && l2 <= r1) {
                if((m + n) % 2 == 0) 
                    return  ((double)(Math.max(l1, l2) + Math.min(r1, r2))) / 2.0;
                else
                    return (double)Math.max(l1, l2);
            }

            else if(l1 > r2) {
                high = cut1 - 1;
            }

            else if(l2 > r1) {
                low = cut1 + 1;
            }
        }
        return 1;
    }
}

import java.util.ArrayList;
public class Solution
{
    public static int binarySearch(ArrayList<Integer> row) {
        int left = 0;
        int right = row.size() - 1;
        int idx = row.size();
        while(left <= right) {
            int mid = left + (right - left) / 2;

            if(row.get(mid) == 1) {
                idx = mid;
                right = mid - 1;
            }
            else {
                left = mid + 1;
            }
        }

        return row.size() - idx;
    }
    public static int maximumOnesRow(ArrayList<ArrayList<Integer>> matrix, int n, int m)
    {
        //	  Write your code here.
        int ans = -1;
        int currMax = -1;
        for(int i = 0; i < matrix.size(); i++) {
            int countOnes = binarySearch(matrix.get(i));
            if(countOnes == m) return i;
            if(countOnes > currMax) {
                currMax = countOnes;
                ans = i;
            }
        }

        return ans;
    }
}

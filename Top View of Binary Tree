//User function Template for Java

/*
class Node{
    int data;
    Node left;
    Node right;
    Node(int data){
        this.data = data;
        left=null;
        right=null;
    }
}
*/
class Pair{
    int hd;
    Node node;
    
    Pair(Node node, int hd){
        this.node = node;
        this.hd = hd;
    }
}
class Solution
{
    //Function to return a list of nodes visible from the top view 
    //from left to right in Binary Tree.
    
    static ArrayList<Integer> topView(Node root)
    {
        // add your code
        ArrayList<Integer> ans = new ArrayList<>();
        Queue<Pair> q = new java.util.LinkedList<Pair>();
        Map<Integer, Integer> mp = new TreeMap<>();
        q.offer(new Pair(root, 0));
        
        while(!q.isEmpty())
        {
            Pair temp = q.poll();
            int hd = temp.hd;
            
            if(mp.get(hd) == null) mp.put(hd, temp.node.data);
            if(temp.node.left != null)
            {
                q.offer(new Pair(temp.node.left, hd-1));
            }
            
            if(temp.node.right != null)
            {
                q.offer(new Pair(temp.node.right, hd+1));
            }
        }
        
        for (Map.Entry<Integer,Integer> entry : mp.entrySet()) {
            ans.add(entry.getValue()); 
        }
        return ans; 
    }
}

class Solution {
    public void solve(int open, int close, List<String> res, String op) {
        if(open == 0 && close == 0) {
            res.add(op);
            return;
        }
        
        if(open != 0) {
            if(open == close) {
                op += "(";
                solve(open - 1, close, res, op);
            }
            else if(open < close) {
                String op1 = op + "(";
                solve(open - 1, close, res, op1);
                String op2 = op + ")";
                solve(open, close - 1, res, op2);
            }
        }
        
        else {
            while(close > 0) {
                op += ")";
                close--;
            }
            
            solve(0, 0, res, op);
        }
        return;
    }
    public List<String> generateParenthesis(int n) {
        List<String> res = new ArrayList<>();
        
        int open = n;
        int close = n;
        String op = "";
        
        solve(open, close, res, op);
        
        return res;
    }
}

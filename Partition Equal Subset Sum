class Solution {
    public boolean isSubsetSum(int N, int arr[], int sum){
        // code here
        boolean[][] t = new boolean[N+1][sum+1];
        
        // Base condition
        for(int j=0; j<sum+1; j++) {
            t[0][j] = false;
        }
        
        for(int i=0; i<N+1; i++) {
            t[i][0] = true;
        }
        
        for(int i=1; i<N+1; i++) {
            for(int j=1; j<sum+1; j++) {
                if(arr[i-1] <= j) {
                    t[i][j] = t[i-1][j] || t[i-1][j-arr[i-1]];
                }
                
                else
                    t[i][j] = t[i-1][j];
            }
        }
        
        return t[N][sum];
    }
    
    public boolean canPartition(int[] nums) {
        int sum = 0;
        for(int num : nums) {
            sum += num;
        }
        
        if(sum%2 != 0) return false;
        
        return isSubsetSum(nums.length, nums, sum/2);
    }
}
